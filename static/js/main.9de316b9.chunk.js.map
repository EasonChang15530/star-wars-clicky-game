{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Counter/index.js","App.js","index.js"],"names":["CharacterCard","props","className","alt","name","src","image","onClick","randomizeImages","Wrapper","children","Title","Counter","count","topScore","App","state","characters","userChoice","id","console","log","randomCharacters","sort","a","b","Math","random","indexOf","currentCount","currentChoice","push","setState","alert","this","map","character","Component","ReactDOM","render","document","getElementById"],"mappings":"y+DAuBeA,MApBf,SAAuBC,GACrB,OACE,yBAAKC,UAAU,+BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,QAASN,EAAMO,mBAEnB,yBAAKN,UAAU,WACb,gCACGD,EAAMG,U,MCAJK,MAZf,SAAiBR,GACf,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACZD,EAAMS,a,MCDFC,MAJf,SAAeV,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMS,W,MCevBE,MAff,SAAiBX,GACf,OACE,6BACE,yBAAKC,UAAU,gBACb,uBAAGA,UAAU,gBAAb,gBAA0CD,EAAMY,MAAhD,KACE,4CACcZ,EAAMa,c,OCuDfC,E,2MAvDbC,MAAQ,CACNC,aACAJ,MAAM,EACNK,WAAW,GACXJ,SAAS,G,EAKXN,gBAAkB,SAAAW,GAChBC,QAAQC,IAAI,MAAQF,EAAK,2BACzB,IAAIG,EAAmB,EAAKN,MAAMC,WAAWM,MAAK,SAASC,EAAGC,GAAG,MAAO,GAAMC,KAAKC,YACnF,IAA2C,IAAvC,EAAKX,MAAME,WAAWU,QAAQT,GAAY,CAC5C,IAAMU,EAAe,EAAKb,MAAMH,MAC1BiB,EAAgB,EAAKd,MAAME,WACjCY,EAAcC,KAAKZ,GAEnB,EAAKa,SAAS,CAAEnB,MAAMgB,EAAa,EAAGZ,WAAWK,EAAkBJ,WAAWY,QACzE,CACLG,MAAM,cACN,IAAMJ,EAAe,EAAKb,MAAMH,MAC5BgB,EAAe,EAAKb,MAAMF,UAC5B,EAAKkB,SAAS,CAAClB,SAASe,IAE1B,EAAKG,SAAS,CAACnB,MAAM,EAAGK,WAAW,O,wEAM7B,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,8BACA,kBAAC,EAAD,CACAL,MAAOqB,KAAKlB,MAAMH,MAClBC,SAAUoB,KAAKlB,MAAMF,WAErB,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,OACZgC,KAAKlB,MAAMC,WAAWkB,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACEjB,GAAIiB,EAAUjB,GACdf,KAAMgC,EAAUhC,KAChBE,MAAO8B,EAAU9B,MACjBE,gBAAiB,kBAAM,EAAKA,gBAAgB4B,EAAUjB,iB,GA/CpDkB,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9de316b9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n  return (\n    <div className=\"col-lg-3 col-md-6 col-sm-12\">\n      <div className=\"card\">\n        <div className=\"img-container\">\n          <img\n            alt={props.name}\n            src={props.image}\n            onClick={props.randomizeImages} />\n        </div>\n        <div className=\"content\">\n          <strong>\n            {props.name}\n          </strong>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction Counter(props) {\n  return (\n    <div>\n      <div className=\"counter-body\">\n        <p className=\"counter-text\">Click Count: {props.count} /\n          <span>\n            Top Score: {props.topScore}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport characters from \"./characters.json\";\n\n\nclass App extends Component {\n  // Setting this.state.characters to the characters json array\n  state = {\n    characters,\n    count:0,\n    userChoice:[],\n    topScore:0,\n  };\n\n  \n\n  randomizeImages = id => {\n    console.log(\"No.\" + id + \" This has been clicked!\");\n    var randomCharacters = this.state.characters.sort(function(a, b){return 0.5 - Math.random()});\n    if (this.state.userChoice.indexOf(id) === -1) {\n      const currentCount = this.state.count;\n      const currentChoice = this.state.userChoice;\n      currentChoice.push(id);\n      // Set this.state.friends equal to the new friends array\n      this.setState({ count:currentCount+1, characters:randomCharacters, userChoice:currentChoice});\n    } else {\n      alert(\"Game Over!\");\n      const currentCount = this.state.count;\n      if (currentCount > this.state.topScore) {\n        this.setState({topScore:currentCount});\n      }\n      this.setState({count:0, userChoice:[],});\n    }\n    \n  }\n\n  // Map over this.state.characters and render a CharacterCard component for each character object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Star Wars Clicky Game</Title>\n        <Counter \n        count={this.state.count}\n        topScore={this.state.topScore}\n        />\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.characters.map(character => (\n              <CharacterCard\n                id={character.id}\n                name={character.name}\n                image={character.image}\n                randomizeImages={() => this.randomizeImages(character.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper >\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}